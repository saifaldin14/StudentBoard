{"ast":null,"code":"var _jsxFileName = \"/Users/saifal-dinali/Desktop/Projects/React Projects/StudentBoard/StudentBoard/src/components/Scheduler/Scheduler.js\";\nimport React, { Component } from 'react';\nimport 'dhtmlx-scheduler';\nimport 'dhtmlx-scheduler/codebase/dhtmlxscheduler_material.css';\nconst scheduler = window.scheduler;\nexport default class Scheduler extends Component {\n  initSchedulerEvents() {\n    if (scheduler._$initialized) {\n      return;\n    }\n\n    const onDataUpdated = this.props.onDataUpdated;\n    scheduler.attachEvent('onEventAdded', (id, ev) => {\n      if (onDataUpdated) {\n        onDataUpdated('create', ev, id);\n      }\n    });\n    scheduler.attachEvent('onEventChanged', (id, ev) => {\n      if (onDataUpdated) {\n        onDataUpdated('update', ev, id);\n      }\n    });\n    scheduler.attachEvent('onEventDeleted', (id, ev) => {\n      if (onDataUpdated) {\n        onDataUpdated('delete', ev, id);\n      }\n    });\n    scheduler._$initialized = true;\n  }\n\n  componentDidMount() {\n    scheduler.skin = 'material';\n    scheduler.config.header = ['day', 'week', 'month', 'date', 'prev', 'today', 'next'];\n    scheduler.config.hour_date = '%g:%i %A';\n    scheduler.xy.scale_width = 70;\n    this.initSchedulerEvents();\n    const {\n      events\n    } = this.props;\n    scheduler.init(this.schedulerContainer, new Date(2020, 5, 10));\n    scheduler.clearAll();\n    scheduler.parse(events);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.timeFormatState !== nextProps.timeFormatState;\n  }\n\n  componentDidUpdate() {\n    scheduler.render();\n  }\n\n  setTimeFormat(state) {\n    scheduler.config.hour_date = state ? '%H:%i' : '%g:%i %A';\n    scheduler.templates.hour_scale = scheduler.date.date_to_str(scheduler.config.hour_date);\n  }\n\n  render() {\n    const {\n      timeFormatState\n    } = this.props;\n    this.setTimeFormat(timeFormatState);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: input => {\n        this.schedulerContainer = input;\n      },\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/saifal-dinali/Desktop/Projects/React Projects/StudentBoard/StudentBoard/src/components/Scheduler/Scheduler.js"],"names":["React","Component","scheduler","window","Scheduler","initSchedulerEvents","_$initialized","onDataUpdated","props","attachEvent","id","ev","componentDidMount","skin","config","header","hour_date","xy","scale_width","events","init","schedulerContainer","Date","clearAll","parse","shouldComponentUpdate","nextProps","timeFormatState","componentDidUpdate","render","setTimeFormat","state","templates","hour_scale","date","date_to_str","input","width","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'dhtmlx-scheduler';\nimport 'dhtmlx-scheduler/codebase/dhtmlxscheduler_material.css';\n\nconst scheduler = window.scheduler;\n\nexport default class Scheduler extends Component {\n  initSchedulerEvents() {\n    if (scheduler._$initialized) {\n      return;\n    }\n\n    const onDataUpdated = this.props.onDataUpdated;\n\n    scheduler.attachEvent('onEventAdded', (id, ev) => {\n      if (onDataUpdated) {\n        onDataUpdated('create', ev, id);\n      }\n    });\n\n    scheduler.attachEvent('onEventChanged', (id, ev) => {\n      if (onDataUpdated) {\n        onDataUpdated('update', ev, id);\n      }\n    });\n\n    scheduler.attachEvent('onEventDeleted', (id, ev) => {\n      if (onDataUpdated) {\n        onDataUpdated('delete', ev, id);\n      }\n    });\n    scheduler._$initialized = true;\n  }\n  componentDidMount() {\n    scheduler.skin = 'material';\n    scheduler.config.header = [\n      'day',\n      'week',\n      'month',\n      'date',\n      'prev',\n      'today',\n      'next'\n    ];\n    scheduler.config.hour_date = '%g:%i %A';\n    scheduler.xy.scale_width = 70;\n\n    this.initSchedulerEvents();\n\n    const { events } = this.props;\n    scheduler.init(this.schedulerContainer, new Date(2020, 5, 10));\n    scheduler.clearAll();\n    scheduler.parse(events);\n  }\n  shouldComponentUpdate(nextProps) {\n    return this.props.timeFormatState !== nextProps.timeFormatState;\n  }\n\n  componentDidUpdate() {\n    scheduler.render();\n  }\n\n  setTimeFormat(state) {\n    scheduler.config.hour_date = state ? '%H:%i' : '%g:%i %A';\n    scheduler.templates.hour_scale = scheduler.date.date_to_str(scheduler.config.hour_date);\n  }\n\n  render() {\n    const { timeFormatState } = this.props;\n    this.setTimeFormat(timeFormatState);\n    return (\n      <div\n        ref={(input) => { this.schedulerContainer = input }}\n        style={{ width: '100%', height: '100%' }}\n      ></div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}