{"ast":null,"code":"var _jsxFileName = \"/Users/saifal-dinali/Desktop/Projects/React Projects/StudentBoard/StudentBoard/src/components/Scheduler/Scheduler.js\";\nimport React, { Component } from 'react';\nimport 'dhtmlx-scheduler';\nimport 'dhtmlx-scheduler/codebase/dhtmlxscheduler_material.css';\nconst scheduler = window.scheduler;\nexport default class Scheduler extends Component {\n  componentDidMount() {\n    scheduler.skin = 'material';\n    scheduler.config.header = ['day', 'week', 'month', 'date', 'prev', 'today', 'next'];\n    scheduler.config.hour_date = '%g:%i %A';\n    scheduler.xy.scale_width = 70;\n    const {\n      events\n    } = this.props;\n    scheduler.init(this.schedulerContainer, new Date(2020, 5, 10));\n    scheduler.clearAll();\n    scheduler.parse(events);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.timeFormatState !== nextProps.timeFormatState;\n  }\n\n  componentDidUpdate() {\n    scheduler.render();\n  }\n\n  setTimeFormat(state) {\n    scheduler.config.hour_date = state ? '%H:%i' : '%g:%i %A';\n    scheduler.templates.hour_scale = scheduler.date.date_to_str(scheduler.config.hour_date);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: input => {\n        this.schedulerContainer = input;\n      },\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/saifal-dinali/Desktop/Projects/React Projects/StudentBoard/StudentBoard/src/components/Scheduler/Scheduler.js"],"names":["React","Component","scheduler","window","Scheduler","componentDidMount","skin","config","header","hour_date","xy","scale_width","events","props","init","schedulerContainer","Date","clearAll","parse","shouldComponentUpdate","nextProps","timeFormatState","componentDidUpdate","render","setTimeFormat","state","templates","hour_scale","date","date_to_str","input","width","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kBAAP;AACA,OAAO,wDAAP;AAEA,MAAMC,SAAS,GAAGC,MAAM,CAACD,SAAzB;AAEA,eAAe,MAAME,SAAN,SAAwBH,SAAxB,CAAkC;AAC/CI,EAAAA,iBAAiB,GAAG;AAClBH,IAAAA,SAAS,CAACI,IAAV,GAAiB,UAAjB;AACAJ,IAAAA,SAAS,CAACK,MAAV,CAAiBC,MAAjB,GAA0B,CACxB,KADwB,EAExB,MAFwB,EAGxB,OAHwB,EAIxB,MAJwB,EAKxB,MALwB,EAMxB,OANwB,EAOxB,MAPwB,CAA1B;AASAN,IAAAA,SAAS,CAACK,MAAV,CAAiBE,SAAjB,GAA6B,UAA7B;AACAP,IAAAA,SAAS,CAACQ,EAAV,CAAaC,WAAb,GAA2B,EAA3B;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKC,KAAxB;AACAX,IAAAA,SAAS,CAACY,IAAV,CAAe,KAAKC,kBAApB,EAAwC,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAAxC;AACAd,IAAAA,SAAS,CAACe,QAAV;AACAf,IAAAA,SAAS,CAACgB,KAAV,CAAgBN,MAAhB;AACD;;AACDO,EAAAA,qBAAqB,CAACC,SAAD,EAAY;AAC/B,WAAO,KAAKP,KAAL,CAAWQ,eAAX,KAA+BD,SAAS,CAACC,eAAhD;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnBpB,IAAAA,SAAS,CAACqB,MAAV;AACD;;AAEDC,EAAAA,aAAa,CAACC,KAAD,EAAQ;AACnBvB,IAAAA,SAAS,CAACK,MAAV,CAAiBE,SAAjB,GAA6BgB,KAAK,GAAG,OAAH,GAAa,UAA/C;AACAvB,IAAAA,SAAS,CAACwB,SAAV,CAAoBC,UAApB,GAAiCzB,SAAS,CAAC0B,IAAV,CAAeC,WAAf,CAA2B3B,SAAS,CAACK,MAAV,CAAiBE,SAA5C,CAAjC;AACD;;AAEDc,EAAAA,MAAM,GAAG;AACP,wBACE;AACE,MAAA,GAAG,EAAGO,KAAD,IAAW;AAAE,aAAKf,kBAAL,GAA0Be,KAA1B;AAAiC,OADrD;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD;;AAxC8C","sourcesContent":["import React, { Component } from 'react';\nimport 'dhtmlx-scheduler';\nimport 'dhtmlx-scheduler/codebase/dhtmlxscheduler_material.css';\n\nconst scheduler = window.scheduler;\n\nexport default class Scheduler extends Component {\n  componentDidMount() {\n    scheduler.skin = 'material';\n    scheduler.config.header = [\n      'day',\n      'week',\n      'month',\n      'date',\n      'prev',\n      'today',\n      'next'\n    ];\n    scheduler.config.hour_date = '%g:%i %A';\n    scheduler.xy.scale_width = 70;\n\n    const { events } = this.props;\n    scheduler.init(this.schedulerContainer, new Date(2020, 5, 10));\n    scheduler.clearAll();\n    scheduler.parse(events);\n  }\n  shouldComponentUpdate(nextProps) {\n    return this.props.timeFormatState !== nextProps.timeFormatState;\n  }\n\n  componentDidUpdate() {\n    scheduler.render();\n  }\n\n  setTimeFormat(state) {\n    scheduler.config.hour_date = state ? '%H:%i' : '%g:%i %A';\n    scheduler.templates.hour_scale = scheduler.date.date_to_str(scheduler.config.hour_date);\n  }\n\n  render() {\n    return (\n      <div\n        ref={(input) => { this.schedulerContainer = input }}\n        style={{ width: '100%', height: '100%' }}\n      ></div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}